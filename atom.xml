<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>janino@Dev</title>
  <subtitle>努力，到无能为力！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://devfqh.com/"/>
  <updated>2017-07-27T06:40:25.713Z</updated>
  <id>http://devfqh.com/</id>
  
  <author>
    <name>janino</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx-rtmp流媒体服务器搭建</title>
    <link href="http://devfqh.com/2016/08/27/nginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    <id>http://devfqh.com/2016/08/27/nginx-rtmp流媒体服务器搭建/</id>
    <published>2016-08-27T04:00:51.000Z</published>
    <updated>2017-07-27T06:40:25.713Z</updated>
    
    <content type="html"><![CDATA[<h2 id="直播流程"><a href="#直播流程" class="headerlink" title="直播流程:"></a>直播流程:</h2><p><img src="http://devfqh.com/images/live/live_p1.png" alt=""></p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>1,先下载安装  nginx 和 nginx-rtmp 编译依赖工具<br>sudo apt-get install build-essential libpcre3 libpcre3-dev libssl-dev</p>
<p>2,创建一个工作目录，并切换到工作目录<br>mkdir /usr/janino/nginx<br>cd /usr/janino/nginx</p>
<p>3,下载 nginx 和 nginx-rtmp源码（wget是一个从网络上自动下载文件的自由工具）<br>wget <a href="http://nginx.org/download/nginx-1.8.1.tar.gz" target="_blank" rel="external">http://nginx.org/download/nginx-1.8.1.tar.gz</a><br>wget <a href="https://github.com/arut/nginx-rtmp-module/archive/master.zip" target="_blank" rel="external">https://github.com/arut/nginx-rtmp-module/archive/master.zip</a></p>
<p>4,安装unzip工具，解压下载的安装包<br>sudo apt-get install unzip</p>
<p>5,解压 nginx 和 nginx-rtmp安装包<br>tar -zxvf nginx-1.7.5.tar.gz<br>-zxvf分别是四个参数<br>x : 从 tar 包中把文件提取出来<br>z : 表示 tar 包是被 gzip 压缩过的，所以解压时需要用 gunzip 解压<br>v : 显示详细信息<br>f xxx.tar.gz :  指定被处理的文件是 xxx.tar.gz</p>
<p>unzip master.zip</p>
<p>6,切换到 nginx-目录<br>cd nginx-1.7.5</p>
<p>7,添加 nginx-rtmp 模板编译到 nginx<br>./configure –with-http_ssl_module –add-module=../nginx-rtmp-module-master</p>
<p>8,编译安装<br>make<br>sudo make install</p>
<p>9,安装nginx init 脚本<br>sudo wget <a href="https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx" target="_blank" rel="external">https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx</a> -O /etc/init.d/nginx<br>sudo chmod +x /etc/init.d/nginx<br>sudo update-rc.d nginx defaults</p>
<p>10,启动和停止nginx 服务，生成配置文件<br>sudo service nginx start<br>sudo service nginx stop</p>
<p>11,安装 FFmpeg<br>make<br>make install</p>
<p>12,配置 nginx-rtmp 服务器<br>打开 /usr/local/nginx/conf/nginx.conf<br>在末尾添加如下 配置</p>
<p>复制代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">rtmp &#123;</div><div class="line">    server &#123;</div><div class="line">            listen 1935;</div><div class="line">            chunk_size 4096;</div><div class="line"></div><div class="line">            application live &#123;</div><div class="line">                    live on;</div><div class="line">                    record off;</div><div class="line">                    exec ffmpeg -i rtmp://localhost/live/$name -threads 1 -c:v libx264 -profile:v baseline -b:v 350K -s 640x360 -f flv -c:a aac -ac 1 -strict -2 -b:a 56k rtmp://localhost/live360p/$name;</div><div class="line">            &#125;</div><div class="line">            application live360p &#123;</div><div class="line">                    live on;</div><div class="line">                    record off;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>复制代码</p>
<p>13,保存上面配置文件，然后重新启动nginx服务<br>sudo service nginx restart</p>
<p>14,如果你使用了防火墙，请允许端口 tcp 1935</p>
<p>15,使用 客户端，使用 rtmp协议进行视频实时采集<br>Field 1: rtmp://your.vultr.ip/live/<br>Field 2: stream-key-your-set</p>
<p>服务器配置测试播放器：<br>将播放器复制到目录：/usr/local/nginx/html/，然后修改播放地址</p>
<p>用ffplay播放RTMP直播流：<br>ffplay “rtmp://pub1.guoshi.com/live/newcetv1 live=1”</p>
<p><strong>nginx:</strong><br><img src="http://devfqh.com/images/live/live_p2.png" alt=""></p>
<p><strong>Demo</strong></p>
<p><a href="https://github.com/janino/janino_live" title="janino_live" target="_blank" rel="external">https://github.com/janino/janino_live</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;直播流程&quot;&gt;&lt;a href=&quot;#直播流程&quot; class=&quot;headerlink&quot; title=&quot;直播流程:&quot;&gt;&lt;/a&gt;直播流程:&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://devfqh.com/images/live/live_p1.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="直播" scheme="http://devfqh.com/categories/%E7%9B%B4%E6%92%AD/"/>
    
    
      <category term="-直播" scheme="http://devfqh.com/tags/%E7%9B%B4%E6%92%AD/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg编译</title>
    <link href="http://devfqh.com/2016/08/22/ffmpeg%E7%BC%96%E8%AF%91/"/>
    <id>http://devfqh.com/2016/08/22/ffmpeg编译/</id>
    <published>2016-08-22T08:37:07.000Z</published>
    <updated>2017-07-27T06:38:43.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编译-FFmpeg"><a href="#编译-FFmpeg" class="headerlink" title="编译 FFmpeg"></a>编译 FFmpeg</h2><p>1.阿里云主机 ubuntu 14.04 64位</p>
<p>2.安装XShell、Xftp</p>
<p>3.上传NDK、FFmpeg</p>
<p>4.安装VIM  sudo apt-get install vim-gtk</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">命令模式</div><div class="line">退出，shift + :，输入q!强制退出</div><div class="line">保存退出,shift + z z</div><div class="line">进入编辑模式，i</div><div class="line">进入命令模式，Esc</div><div class="line">命令模式：x删除，dd删除行</div></pre></td></tr></table></figure>
<p>5.VIM配置<br>进入配置文件：vim /etc/vim/vimrc</p>
<p>set nu<br>set tabstop<br>set cursorline<br>set ruler</p>
<ol>
<li>NDK安装</li>
</ol>
<p>目录给权限：chmod 777 -R ndk<br>解压：./android-ndk-r10e-linux-x86_64.bin<br>环境变量配置：<br>命令vim ~/.bashrc<br>添加：<br>export NDKROOT=/usr/ndk/android-ndk-r10e<br>export PATH=$NDKROOT:$PATH<br>更新环境变量：<br>source ~/.bashrc</p>
<p>7.解压ffmpeg</p>
<p>unzip ffmpeg-2.6.9.zip</p>
<p>8.编译ffmpeg</p>
<p>1）编写shell脚本文件<br>2）给文件权限：chmod 777 android_build.sh<br>dos2unix<br>3）执行 ./android_build.sh</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;编译-FFmpeg&quot;&gt;&lt;a href=&quot;#编译-FFmpeg&quot; class=&quot;headerlink&quot; title=&quot;编译 FFmpeg&quot;&gt;&lt;/a&gt;编译 FFmpeg&lt;/h2&gt;&lt;p&gt;1.阿里云主机 ubuntu 14.04 64位&lt;/p&gt;
&lt;p&gt;2.安装XShell
    
    </summary>
    
      <category term="直播" scheme="http://devfqh.com/categories/%E7%9B%B4%E6%92%AD/"/>
    
    
      <category term="-直播" scheme="http://devfqh.com/tags/%E7%9B%B4%E6%92%AD/"/>
    
  </entry>
  
  <entry>
    <title>linux基础知识</title>
    <link href="http://devfqh.com/2016/03/26/linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://devfqh.com/2016/03/26/linux基础知识/</id>
    <published>2016-03-26T12:11:02.000Z</published>
    <updated>2017-07-27T06:59:23.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>linux：</strong>开源的类unix操作系统，1991年由芬兰人Linus Torvalds编写，吉祥物为企鹅，由于其出色的性能、安全性等，广泛应用于服务器方面；</p>
<p><strong>常见的发行版本：</strong>redhat（收费）、fedora、ubuntu（图形界面出色）、centos都是linux的发行版本；</p>
<p><strong>GLI（Command Line User Interface）：</strong>命令行用户界面，效率高，适用于服务器<br><strong>GUI（Graphical User Interface）：</strong>图形用户接口，操作友好，例如windows、macos，缺点消耗资源，不适用于服务器；</p>
<p><strong>linux的安装方式：</strong>此处采用VMWare安装centos7来完成<br>    1，windows、linux双系统：不建议使用，较为繁琐，且容易出现引导、磁盘错误等…<br>    2，虚拟机安装（建议使用）：可通过VMware、Visual Box等虚拟机安装<br>    3，单独安装Linux：企业开发中最常用，作为服务器，通过windows远程控制</p>
<p><strong>root：</strong>超级用户，拥有所有权限；</p>
<p><strong>在VMware安装完centos后的网络设置： </strong>主要有三种方式<br>  1，NAT：即网络地址转换，名称通常为VMnet8，可使得与真实机的网卡在不同网段中，实现联网<br>  2，bridge：桥接，名称为VMnet0，可使得与真实机的网卡在同一网段中，实现联网<br>  3，host-only：仅主机模式，名称为VMnet1，不可与外界通信，只能与本机物理网卡通信</p>
<p><strong>NAT设置方式：</strong><br>    1，在windows中启动VMware的各种服务，并设置本地连接和VMnet8的ip地址自动获取（通常是默认的，不用管）<br>    2，VM中编辑 - 虚拟网络编辑器</p>
<p><img src="http://devfqh.com/images/Linux/part_p1.png" alt=""></p>
<p><img src="http://devfqh.com/images/Linux/part_p2.png" alt=""></p>
<p>  3，选中虚拟机 - 设置<br><img src="http://devfqh.com/images/Linux/part_p3.png" alt=""></p>
<p>   4，重启linux网卡，确认<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">service NetworkManager stop</div><div class="line">service network restart</div><div class="line">service NetworkManager start</div><div class="line"></div><div class="line">host http://www.baidu.com     #进行确认,或者通过ifconfig</div></pre></td></tr></table></figure></p>
<p>命令可能会无效，直接进入centos7图形界面，在右上角勾选以下选项即可<br><img src="http://devfqh.com/images/Linux/part_p4.png" alt="">      </p>
<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><h2 id="简单命令"><a href="#简单命令" class="headerlink" title="简单命令"></a>简单命令</h2><p><strong>centos调出Terminal：</strong>application –&gt;  system tools –&gt; Terminal</p>
<p><strong>图形界面切换：</strong>在centos中可通过ctrl + alt + f2进行切换</p>
<pre><code>startx  #切换至图形界面
</code></pre><p><strong>用户登录：</strong> su 用户名，再输入密码即可完成登录，在命令行下以$为普通用户，以#开头则代表root<br>    su  root</p>
<p><strong>关机、重启命令：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">shutdown -h now         #立即关机</div><div class="line">shutdown -r now         #立即重启</div><div class="line">shutdown -t 10          #10秒后关机</div><div class="line">shutdown -c             #取消正在执行的shutdown命令</div><div class="line">reboot                  #重启计算机</div><div class="line">logout                  #注销</div></pre></td></tr></table></figure></p>
<p><strong>清屏：</strong><br>    clear</p>
<p><strong>程序退出：</strong><br>    exit 0  #程序正常退出，非0为不正常</p>
<p><strong>ctrl  + c：</strong> <code>结束操作</code></p>
<p><strong>寻求帮助：</strong><br>    man find  #查看find命令的文档</p>
<p><strong>uname -a：</strong> <code>查看系统版本</code></p>
<h2 id="启动级别"><a href="#启动级别" class="headerlink" title="启动级别"></a>启动级别</h2><p><strong>linux启动级别：</strong>总共有7个运行级别，如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">0：系统停机状态，无法运行</div><div class="line">1：单用户工作状态，用户系统维护，禁止远程登录</div><div class="line">2：多用户状态，无NFS，看不懂，没用</div><div class="line">3：完全的多用户状态，登陆后进入命令行界面（常用）</div><div class="line">4：系统未使用，保留的</div><div class="line">5：图像界面模式（常用，默认的）</div><div class="line">6：系统正常关闭并无限重启</div></pre></td></tr></table></figure></p>
<p><strong>查看运行级别：</strong><br>    runlevel</p>
<p><strong>linux改变运行级别：</strong><br><strong>临时设置：</strong><br>        init 5  #临时切换启动级别,重启后还原不会永久生效    </p>
<p><strong>永久设置：</strong><br>    1，登录后通过通过vi编辑器打开/etc/inittab文件，vi编辑器具体使用后续会讲<br>         vi /etc/inittab<br>    2，找到id:5:initdefault，将其改为3命令行即可</p>
<p><img src="http://devfqh.com/images/Linux/part_p5.png" alt=""></p>
<pre><code>3，之后通过reboot重新启动，即可进入命令行界面，可通过startx切换到图形界面
</code></pre><p><strong>不小心设置启动级别为6后，不断重启的解决方案：</strong><br>1，在linux系统读秒阶段，按下e<br>2，进入下一个界面，需再按一次e<br>3，选择<img src="http://devfqh.com/images/Linux/part_p6.png" alt="">再次按下e<br>4，在此处输入1 <img src="http://devfqh.com/images/Linux/part_p7.png" alt=""></p>
<p>5，回车后返回到之前的界面，选择 <img src="http://devfqh.com/images/Linux/part_p8.png" alt="">，按下B，系统即可以level1运行</p>
<p>6，之后在设置还原启动级别即可</p>
<p><strong>centos7设置启动级别（与传统linux不同）：</strong>centos7升级后，不使用/etc/inittab，通过target常量定义的方式来设置，与之前不同，都定义在了/lib/systemd/system下</p>
<p><strong>1，查看启动级别常量定义</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ls -ltr /lib/systemd/system/runlevel*</div><div class="line"></div><div class="line">lrwxrwxrwx. 1 root root 13 7月  30 14:22 /lib/systemd/system/runlevel1.target -&gt; rescue.target</div><div class="line">lrwxrwxrwx. 1 root root 15 7月  30 14:22 /lib/systemd/system/runlevel0.target -&gt; poweroff.target</div><div class="line">lrwxrwxrwx. 1 root root 17 7月  30 14:22 /lib/systemd/system/runlevel2.target -&gt; multi-user.target</div><div class="line">lrwxrwxrwx. 1 root root 17 7月  30 14:22 /lib/systemd/system/runlevel3.target -&gt; multi-user.target</div><div class="line">lrwxrwxrwx. 1 root root 17 7月  30 14:22 /lib/systemd/system/runlevel4.target -&gt; multi-user.target</div><div class="line">lrwxrwxrwx. 1 root root 16 7月  30 14:22 /lib/systemd/system/runlevel5.target -&gt; graphical.target</div><div class="line">lrwxrwxrwx. 1 root root 13 7月  30 14:22 /lib/systemd/system/runlevel6.target -&gt; reboot.target</div></pre></td></tr></table></figure></p>
<p><strong>2，切换启动级别：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ln -sf /lib/systemd/system/runlevel3.target /etc/systemd/system/default.target      #两者皆可，只是个别名而已</div><div class="line"></div><div class="line">ln -sf /lib/systemd/system/multi-user.target /etc/systemd/system/default.target</div></pre></td></tr></table></figure></p>
<p><strong>3，centos7设置默认启动级别：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl set-default multi-user.target</div></pre></td></tr></table></figure></p>
<p><strong>centos7设置启动级别6后，解决方案：</strong>新的版本使用了grub2，因此设置方法略有不同<br>    1，在linux系统读秒阶段，按下e</p>
<p><img src="http://devfqh.com/images/Linux/part_p9.png" alt=""></p>
<pre><code>2，找到linux16这一行，将ro改为rw，并且在rhgb quiet后面加上3，即rhgb quiet 3
</code></pre><p><img src="http://devfqh.com/images/Linux/part_p9.png" alt=""></p>
<pre><code>3，之后按ctrl + 重启，然后再重新将启动级别设置还原即可
</code></pre><h1 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>说明：</strong>与window不同，linux的文件系统是以层级为目录的，根为“/”，所有以/开头的都是绝对路径；</p>
<p><img src="http://devfqh.com/images/\ComputerBase/CBase_p66.png" alt=""></p>
<p><strong>目录描述：加粗斜体为常用</strong></p>
<p><strong><em>/：</em></strong> <code>文件系统的根，只有root用户才具有此目录下的写权限</code><br><strong><em>/bin：</em></strong> <code>存放常用的用户命令，例如vi、mkdir、ls、rm、ping、ps...</code><br><strong><em>/sbin：</em></strong> <code>存放常用系统命令，只有root才可用，通常为系统管理员维护使用，例如reboot、fdisk、ifconfig、swapo等命令...</code><br><strong><em>/etc：</em></strong> <code>存放配置文件，例如常见的环境变量、各种系统配置...</code><br><strong><em>/home：</em></strong> <code>用户的目录，用于存放每个用户的数据，例如/home/zjt  /home/james</code><br><strong><em>/usr：</em></strong> <code>用户程序，默认安装目录，例如常见的eclipse、mysql都可安装到此，类似于windows的program files</code><br><strong><em>/proc：</em></strong> <code>存放系统的进程信息</code><br><strong><em>/mnt：</em></strong> <code>磁盘挂载目录，可用于移动设备的临时目录，例如u盘等</code><br><strong><em>/dev：</em></strong> <code>设备文件，在linux上设备也被当做一个文件来管理</code><br><strong><em>/var：</em></strong> <code>变量文件</code><br><strong><em>/tmp：</em></strong> <code>临时文件</code><br><strong><em>/boot：</em></strong> <code>存放引导程序</code><br><strong><em>/lib：</em></strong> <code>系统库</code><br><strong><em>/opt：</em></strong> <code>一些附加选项</code><br><strong><em>/media：</em></strong> <code>媒体设备</code><br><strong><em>/srv：</em></strong> <code>服务设备，包含了特点服务的信息</code></p>
<h2 id="目录、文件操作"><a href="#目录、文件操作" class="headerlink" title="目录、文件操作"></a>目录、文件操作</h2><p><strong>查看当前目录：</strong><br>    pwd</p>
<p><strong>切换目录：</strong><br>    cd /etc</p>
<p><strong>创建目录：</strong><br><code>mkdir dir1</code>                   #创建目录</p>
<p><code>mkdir -p dir1/dir2/dir3</code>     #递归创建目录</p>
<p><code>mkdir -m 757 dir1</code>            #创建目录，并指定权限（后续会介绍）</p>
<p><strong>删除目录或文件：</strong><br><code>rmdir dir1</code>      #删除目录<br><code>rm -rf dir1</code>     #递归删除目录，且不可恢复</p>
<p><strong>重命名：</strong><br><code>mv dir1 dir2</code>      #将dir1重命名为dir2</p>
<p><strong>剪切（即移动）：</strong><br><code>mv a.txt dir1</code>      #将a.txt移动到dir1中</p>
<p><code>mv dir1 dir2</code>       #移动文件夹，将dir1移动到dir2中</p>
<p><code>mv /dir1/* dir2</code>    #统配符方式，将dir1下的所有文件及目录移动到dir2中</p>
<p><strong>拷贝：</strong><br><code>cd -rf dir1 dir2</code>    #递归拷贝dir1中的所有文件到dir2<br><strong>命令参数：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-f：强行复制文件或目录，无论目的文件是否已存在</div><div class="line">-p：保留源文件或目录的属性，例如所有者、所在组、权限、时间等</div><div class="line">-r：递归处理，将子目录及其文件一起复制</div><div class="line">.........</div></pre></td></tr></table></figure></p>
<p><strong>touch：</strong>  #创建空文件，可指定修改时间为未来时间<br><strong>touch b.txt </strong>       #创建一个空文件b.txt</p>
<p><strong>touch -m b.txt</strong>     #更新修改时间</p>
<p><strong>touch -t 201211142234 b.txt </strong>    #指定修改时间</p>
<p><strong>dir、vdir：</strong>查看目录，功能较少，建议使用ls</p>
<p><strong>ls：</strong> <code>最常用的命令，用于查看文件、目录信息，参数众多</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ls        #查看文件、目录</div><div class="line"></div><div class="line">ls -l     #查看文件目录详情,包含文件权限、所有者、大小等信</div><div class="line"></div><div class="line">ls -al | more     #如果查看信息过多，可通过管道命令，将结果转到more命令分页</div></pre></td></tr></table></figure></p>
<p><strong>命令参数：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-a：列出目录下所有文件，包含以.开头的隐藏文件</div><div class="line">-l：查看详细信息</div><div class="line">-c：按修改时间排序</div><div class="line">-s：按大小排序</div><div class="line">.........</div></pre></td></tr></table></figure></p>
<p><strong>通配符使用：</strong> <code>*、？、[]，很多命令都支持通配符，例如find、ls等等...</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ls *.c            #查看以c结尾</div><div class="line"> </div><div class="line">ls demo?          #查看以demo开头，并后面只有1个字符</div><div class="line"> </div><div class="line">ls demo[1-9]      #查看demo0到demo9</div></pre></td></tr></table></figure></p>
<h2 id="搜索文件"><a href="#搜索文件" class="headerlink" title="搜索文件"></a>搜索文件</h2><p><strong>grep：</strong>在文本中查询内容，格式为grep [-参数] ‘搜索内容’ file</p>
<pre><code>grep -i -n &apos;abc&apos; a.txt #在a.txt中查询abc,忽略大小写,并显示行号
</code></pre><p><strong> 命令参数：</strong><br>       -i：忽略大小写<br>       -n：显示行号<br>       -v：反向搜索，即显示没有搜索字符串的数据<br>       -a：将二进制文件以文本的方式搜索<br>       -c：计算搜索字符串的次数</p>
<p><strong>wc：</strong> 统计文件中的字节数、字数、行数并输出<br><strong>wc -l a.txt</strong><br>        命令参数：<br>       -c：显示字节数<br>       -w：显示字数<br>       -l：显示行数<br>       –help：查看帮助<br>       –version：显示版本</p>
<p><strong>which：</strong>在环境变量指定的路径中，查找可执行命令位置，并返回第一个搜索结果，例如<br>    which pwd  #查找pwd命令的位置，结果为/usr/bin/pwd</p>
<p><strong>whereis：</strong>可查找可执行文件、源代码、帮助文件在文件系统中的位置，底层通过索引，速度快；<br>whereis -b cd     #查找cd命令的位置,返回/usr/bin/cd<br>        命令参数：<br>       -b：仅查找可执行文件<br>       -m：仅查找帮助文件<br>       -s：仅查找源代码文件</p>
<p><strong>find：</strong>搜索文件及目录，效率低下，通过递归的方式，而非索引<br>find / -name a.txt       #在根目录下查找名为a.txt的文件或目录<br>find / -user zjt         #在根目录下查找用户zjt的文件或目录<br>find /home -amin -10     #在/home目录下搜索十分钟内存取的文件,-atime为小时<br>…..<br>        命令参数：<br>       -name filename：查找文件名为filename的文件<br>       -uyser username：按文件所属用户查找<br>       -size n：按文件长度查找<br>       -mtime -n或+n：按文件访问时间来查找，-n指n天以内，+n指n天以前<br>      -atime（小时）、-amin（分钟）<br>       ………</p>
<h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><p><strong>cat：用于查看文件内容、写入内容：</strong><br>cat /etc/inittab            #一次性输出文件内容<br>cat -n /etc/inittab         #一次性输出文件内容，并带上行号</p>
<p>cat &gt; /home/tao/a.txt                         #向文件写入内容，按ctrl + c结束并保存<br>cat &gt; /home/tao/a.txt -&gt; /home/tao/b.txt      #将a.txt写入到b.txt</p>
<p><strong>more：</strong>与cat类似可以查看文件内容，不同之处在于支持分页、行定位等功能…<br>more a.txt    #分页显示<br><strong>命令参数：</strong><br>      +n：从第几行开始显示<br>      -n：定义屏幕大小为n行<br><strong>功能操作：</strong><br>      enter：向下n行，默认1行<br>      ctrl + f：向下滚动一屏<br>      q：退出more<br>      : f：输出文件名和行号<br>      =：输出当前行号<br>      vi：调用vi编辑器<br>      !命令：执行shell命令</p>
<p><strong>less：</strong>比cat、more更加优秀的查看命令，支持向后、向前翻页<br>less a.txt        #显示文件内容<br>less -N a.txt     #加上行号<br><strong>命令参数：</strong><br>      -e：文件显示到结尾后，自动退出<br>      -f：强制打开特殊文件，例如外围设备代号、目录、二进制文件等<br>      -N：显示行号<br><strong>功能操作：</strong><br>      回车：滚动一行<br>      空格：滚动一页<br>      d：往后翻半页<br>      u：往前翻半页<br>      q：退出more</p>
<p><strong>输出重定向命令：</strong><br> less /etc/inittab &gt; a.txt    #将查看结果重定向，写入到a.txt中</p>
<p><strong>输入重定向（不常用）：</strong><br> less &lt; a.txt    #将a.txt重定向输入到less命令，即分页输出</p>
<p><strong>|：</strong>管道命令，将上一个命令的结果交给下一个命令处理，例如<br>ls /etc | less          #显示/etc目录内容，将结果交给less，分页显示</p>
<p>ps -ef | grep tomcat    #查看进程信息，并将结果转到grep中，查找tomcat有关信息</p>
<p><strong>ln：</strong>用于为文件在某个位置上建立链接（即引用），使得在不同目录使用同一个文件时，无需复制文件到每个目录，节省磁盘空间<br>    1，ln命令会同步每一个链接文件，也就是说无论该了何处，所有的链接文件都会发生同步变化<br>    2，分为软连接和硬链接两种<br>                  软链接：即-s模式，最常用，会在选定位置生成一个文件的镜像（即类似于windows的快捷方式），支持目录，当源文件删除后，链接文件失效<br>                  硬链接：会在选定位置上生成一个与源文件大小相同的文件（但不占用实际空间），不支持为目录，当源文件删除后，链接文件不会失效</p>
<pre><code> 参数说明：
-s：软链接，即类似于windows的快捷方式
-f：强制执行
            -v：显示详细的处理过程
</code></pre><p><strong>示例：</strong><br>ln -sf /home/zjt/a.txt  a         #为/home/zjt/a.txt建立软链接，即快捷方式</p>
<p>ln /home/zjt/a.txt  a             #为/home/zjt/a.txt建立硬链接</p>
<p><strong>为目录创建链接：</strong><br>    1，只能软链接，即快捷方式<br>    2，必须为绝对路径，以“/”开头<br>ln -sf /home/zjt /zjt     #为目录建立软连接</p>
<p>#测试查看<br>cd /zjt<br>ls</p>
<h2 id="vi编辑器"><a href="#vi编辑器" class="headerlink" title="vi编辑器"></a>vi编辑器</h2><p><strong>简介：</strong>vi编辑器是unix/linux下使用最广泛的编辑器</p>
<p><strong>使用步骤：</strong><br>    1，vi  demo.c                #不存在则会创建该文件<br>    2，输入i进入insert模式<br>    3，按下ESC退出insert模式<br>    4，:wq（退出并保存）     :q!（退出不保存）<br>          :q（直接退出）            :w file（保存为某个文件）</p>
<p><strong>如何在vi编辑器中显示行号：</strong><br>       1，vim ~/.vimrc<br>       2，随便加上一行set number<br>       3，:wq 保存退出即可</p>
<p><strong>光标的移动（非insert模式使用）：</strong>除了按键盘的上下左右外，还可通过快捷键<br>   G：移动到文章最后<br>   ^：将光标定位到行头<br>   $：将光标定位到行尾<br>   b：将光标定位到上一行行头<br>   w：将光标定位到下一行行头<br>   e：将光标移到下一行行尾<br>    ctrl + f：向前滚动一页，ctrl + d为半页<br>    ctrl + b：向后滚动一页，ctrl +u为半页</p>
<p><strong>查找：</strong>输入“/word”，回车就会进入查找，按下n查找下一个，按下N查找上一个</p>
<p><strong>替换：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">:s /text1 /text2             #用于将光标所在段落搜索到的第一个text1替换成text2</div><div class="line"> </div><div class="line">:s /text1 /text2 /g          #用于将光标所在段落搜索到的所有text1替换成text2    </div><div class="line"> </div><div class="line">:1,$s /text1 /text2/g        #将全文张，所在搜索到的text1替换成text2</div></pre></td></tr></table></figure></p>
<h1 id="用户组、权限"><a href="#用户组、权限" class="headerlink" title="用户组、权限"></a>用户组、权限</h1><h2 id="用户操作"><a href="#用户操作" class="headerlink" title="用户操作"></a>用户操作</h2><p><strong>用户有关文件说明：</strong><br><strong>/etc/password：</strong>存储了linux中用户信息，例如登录名、口令占位符、用户id（UID）、默认组ID（GID）、用户私人信息、主目录、登录shell等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">UID：用于唯一标识系统中的用户</div><div class="line">GID：指定用户登录时默认所在组，32位整数，其中root所在组的GID为0</div></pre></td></tr></table></figure></p>
<p><strong>/etc/shadow：</strong>用于保存登录用户的口令，通常是md5密文，包含了登录名、加密口令、上次修改口令日期、两次修改口令日志间隔等等……<br><strong>/etc/group：</strong>保存系统中所有用户组信息，以及每个组中的成员列表</p>
<p><strong>用户组：</strong>在linux中，用户必须属于一个或多个用户组，类似于角色的概念；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">groupadd myadmin       #添加用户组</div><div class="line"> </div><div class="line">groupdel myadmin       #删除用户组</div><div class="line"> </div><div class="line">more /etc/group        #查看所有用户组</div></pre></td></tr></table></figure></p>
<p><strong>用户管理：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">useradd  zjt             #添加用户</div><div class="line"></div><div class="line">userdel  zjt             #删除用户</div><div class="line"></div><div class="line">usermod  -g 组名  用户名            #改变用户所在组</div><div class="line"></div><div class="line">passwd  zjt              #修改密码，然后需要再次输入密码</div><div class="line"></div><div class="line">who am I                  #当前用户是谁</div><div class="line">logout                    #注销</div></pre></td></tr></table></figure></p>
<p><strong>sudo：</strong>允许普通用户执行一些高级权限的命令，例如reboot、su等，从而避免直接授予root权限带来的安全问题，大部分linux默认都安装了此命令</p>
<h2 id="文件权限说明"><a href="#文件权限说明" class="headerlink" title="文件权限说明"></a>文件权限说明</h2><p><strong>文件权限：</strong>在linux中，文件和目录分为三种权限</p>
<ul>
<li>文件所有者：即文件的创建者</li>
<li>文件所在组：即文件创建者所在组的其它用户</li>
<li>其它组：除了文件所有者和文件所在组的其它组用户</li>
</ul>
<p><strong>权限码：</strong>在linux中，通过权限码来区分文件、目录的权限，例如输入ls -l</p>
<p><strong>第一位字符：</strong>-（文件）       d（目录）        l（链接）<br><strong>其余字符每3个一组：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">第一组rwx：文件所有者的权限是读、写、执行</div><div class="line">第二组r-x：文件所在组的权限是读、执行</div><div class="line">第三组r-x：文件其它组的权限是读、执行</div></pre></td></tr></table></figure></p>
<p><strong>权限码的定义：</strong>r=4    w=2    x=1</p>
<p><strong>通过权限码改变权限：</strong><br>chmod 777 demo.c</p>
<p><strong>通过mode改变权限：</strong><br>chmod +x demo.sh         #为demo.sh添加可执行权限，默认为all，即文件所有者、所在组、其他组</p>
<p>chmod -x demo.sh         #删除可执行权限</p>
<p><strong>chmod语法：</strong>chomd [who] [+-=] [mode] 文件名<br><strong>who：</strong>操作对象，值为如下<br>       u：文件所有者<br>       g：用户所在组<br>       o：其它组<br>       a：默认值，代表所有用户，all<br><strong>操作符：</strong><br>    +：添加权限<br>    -：取消权限<br>    =：赋予指定权限并取消其它的权限（如果存在的话）<br><strong>mode：</strong><br>    r：可读<br>    w：可写<br>    x：可执行</p>
<p><strong>改变文件所有者：</strong><br>chown tao demo.c</p>
<h1 id="解压-压缩命令"><a href="#解压-压缩命令" class="headerlink" title="解压/压缩命令"></a>解压/压缩命令</h1><h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><p><strong>zip/unzip：</strong>主要用于解压/压缩zip文件格式，windows常用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">zip -r dir1.zip dir1    #压缩dir1为dir1.zip，-r代表递归</div><div class="line"> </div><div class="line">unzip dir1.zip           #解压</div></pre></td></tr></table></figure></p>
<h2 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h2><p><strong>gzip/gunzip：</strong>用于.gz格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">gzip -r ./dir1        #压缩dir1下的所有文件，并删除原文件</div><div class="line"></div><div class="line">gzip -rc ./dir1        #压缩dir1下的所有文件，并保留原文件</div><div class="line"></div><div class="line">gunzip a.txt.gz        #解压a.txt.gz，并删除压缩文件</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-r：递归</div><div class="line">-l：显示压缩文件大小、压缩比、未压缩文件大小等信息</div><div class="line">-v：显示压缩/解压文件的文件名和压缩比</div><div class="line">-num：用指定的数字调整压缩率，-1或--fast表示最快压缩方法（低压缩比），-9或--best表示最慢压缩方法（高压缩比）。系统缺省值为6；</div></pre></td></tr></table></figure></p>
<h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><p><strong>tar：</strong>linux下最常用的解压/压缩命令，用于.tar和.tar.gz格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">tar -cvf demo.tar demo.java     #将demo.java压缩成demo.tar</div><div class="line"> </div><div class="line">tar -xvf demo.tar               #解压demo.tar</div><div class="line"></div><div class="line">tar -zcvf demo.tar.gz demo.java        #将demo.java压缩成demo.tar.gz</div><div class="line"></div><div class="line">tar -zxvf demo.tar.gz                  #解压demo.tar.gz</div></pre></td></tr></table></figure></p>
<p><strong>参数说明：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-c ：建立一个归档文件的参数指令（即压缩）</div><div class="line">-x ：解开一个归档文件的参数指令（即解压）</div><div class="line">-z ：是否需要用 gzip 压缩？</div><div class="line">-v ：压缩的过程中显示文件</div><div class="line">-f ：使用指定的文件名，在 f 之后要立即接档名</div></pre></td></tr></table></figure></p>
<p><strong>备注：*</strong>.tar.gz是linux下最常用的压缩文件格式，常用于各种软件包，因此最常用的命令为tar -zcvf和tar -zxvf</p>
<h1 id="分区管理"><a href="#分区管理" class="headerlink" title="分区管理"></a>分区管理</h1><p><strong>主分区：</strong>通常是系统所在分区，马上被使用，不可再分区，一个系统中主分区和扩展分区不可超过4个</p>
<p><strong>扩展分区：</strong>必须分成多个逻辑分区后才可使用，无上限</p>
<p><strong>创建分区的过程：</strong><br>    1，创建扩展分区<br>    2，将扩展分区变成多个逻辑分区</p>
<p><strong>/dev目录：</strong>在linux中，并没有类似windows中的设备管理器、资源管理器，是因为linux将所有设备都看做是文件，存放在/dev中，例如磁盘则为sda0、sda1、sda2文件存储在此目录中…..</p>
<p><strong>常见文件系统表示方法：</strong>ext2、ext3属于日志型文件系统，可通过日志进行恢复数据，swap是交换分区，一块特殊的硬盘空间，当实际内存不够用时，操作系统会从内存中取出一部分暂时不用的数据放在swap交换分区中，从而为当前运行程序腾出足够的空间</p>
<p><img src="http://devfqh.com/images/Linux/part_p11.png" alt="">     </p>
<p><strong>windows：</strong>有几个分区就有几个驱动去，通过盘符来区分</p>
<p><strong>linux：</strong>无论有多少分区，只会有一个根目录“/”，通过载入的方式，将载入分区放到指定目录下；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mount、umount：用于挂载、卸载文件系统</div><div class="line">mkdir mnt/cdrom                #新建一个目录</div><div class="line"> </div><div class="line">mount /dev/scd0 /mnt/mycdrom        #挂载光盘到此新建的目录下，之后即可进行进入目录完成复制、粘贴、安装等操作</div><div class="line"> </div><div class="line">umount /dev/cdrom               #在使用完后，可卸载分区</div></pre></td></tr></table></figure></p>
<p><strong>/etc/fstab：</strong>此文件记录了开机时会自动挂载文件系统的信息，例如启动分区、交换日志等…</p>
<p><img src="http://devfqh.com/images/Linux/part_p12.png" alt=""> </p>
<p><strong>df：</strong>查看磁盘分区使用情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">df            #查看所有分区使用情况</div><div class="line"></div><div class="line">df -h         #查看所有分区使用情况，以GM显示</div><div class="line"></div><div class="line">df -m /home   #查看/home目录下的分区使用情况，以Mb为单位显示</div></pre></td></tr></table></figure></p>
<p><strong>参数说明： </strong>   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">-a：列出所有的文件系统，包括系统的/proc等文件系统</div><div class="line">-k：以kb为显示单位</div><div class="line">-m：以mb为显示位</div><div class="line">-h：以GB、MB、KB等格式显示</div><div class="line">-T：连同该分区的文件系统名一起列出</div><div class="line">```   </div><div class="line"></div><div class="line">![](http://devfqh.com/images/Linux/part_p13.png) </div><div class="line"></div><div class="line">**fsck：**用于检测、修复文件系统</div><div class="line">fsck /dev/sda0   #检测sda0分区</div><div class="line"></div><div class="line">**fdisk：**用于创建分区、查看分区，此目录属于交互式命令，需要录入用户多次输入，较为危险，且不可在本机硬盘上使用，应使用虚拟机或用新硬盘进行实验</div><div class="line">fdisk -l      #列出所有分区表信息</div><div class="line"></div><div class="line">**参数说明：**</div></pre></td></tr></table></figure>
<p>n：新建分区<br>d：删除分区（如果删除了扩展分区、则逻辑分区也一并不存在）<br>t：设置分区文件系统类型<br>w：写入分区表<br>q：不存储离开<br>```</p>
<p><strong>mkfs：</strong>用于格式化操作，不常用<br>mkfs -t type device    #type为指定的文件系统格式，device类似于/dev/hda1即设备</p>
<p><strong>usb：</strong>默认linux会自动挂载插入的usb，可通过lsusb命令查看已发现的usb</p>
<p><strong>说明：</strong>分区的设置通常是在安装系统的时候，通过图形界面设置完成的；</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;linux：&lt;/strong&gt;开源的类unix操作系统，1991年由芬兰人Linus Torvalds编写，吉祥物为企鹅，由
    
    </summary>
    
      <category term="Linux" scheme="http://devfqh.com/categories/Linux/"/>
    
    
      <category term="-Linux" scheme="http://devfqh.com/tags/Linux/"/>
    
  </entry>
  
</feed>
